#include <stdio.h>
#include <math.h>
//uklad oznaczony i nieoznaczony
int main()
{
    int a,b,c,d,e,f,x,y;
    int w,wx,wy;
    scanf("%d%d%d%d%d%d",&a,&b,&c,&d,&e,&f);
    printf("%d*x+%d*y=%d ",a,b,c);
    printf("%d*x+%d*y=%d ",d,e,f);
    w=a*e-b*d;
    wx=c*e-b*f;
    wy=a*f-c*d;
    if(w!=0){
        printf("x= %d ",(wx/w));
        printf("y= %d ",(wy/w));
    }
    if(w==0){

        if(wy==0&&wx==0){
            printf("uklad nieoznaczony, nieskonczenie wiele rozwiazan");
        }
        else{
            printf("uklad sprzeczny,brak rozwiazan");
        }
    }
    return 0;
}
//delta
int main()
{
    int a,b,c,x,y,delta;
    scanf("%d%d%d",&a,&b,&c);
    printf("Zdefiniowales rownanie kwadratowe %dx^2+%db+%d=0 ",a,b,c);
    delta=(b*b)-(4*a*c);
    if(delta<0){
        printf("Delta %d , brak rozwiazan rzeczywistych",delta);
    }
    if(delta==0){
        float x;
        x=-b/(2*a);
        printf("Delta %d , x=%f ",delta,x);
    }
    if(delta>0){
        float x1,x2;
        float pierw;
        pierw=sqrt(delta);
        x1=(-b-pierw)/(2*a);
        x2=(-b+pierw)/(2*a);
        printf("Delta %d, x1=%f , x2=%f",delta,x1,x2);
    }
    return 0;
}
// wczytuje dwie liczby n i m, wypisuje wielokrotnosci n do momentu m
int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=n;i<m;i=i+n){
        printf("%d ",i);
    }
    return 0;
}
//m pierwszysch wielokrotnosci n
int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++){
        printf("%d ",i*n);
    }
    return 0;
}
// wieloktornosci liczby n wieksze od m i mniejsze od k
/// 8, 100 ,130
int main()
{
    int m,n,k;
    scanf("%d%d%d",&n,&m,&k);
    int i;
    for(i=m;i<k;i=i+n){
            printf("%d ",i);
    }
    return 0;
}
/nwm chyba lepsza werjsa 
int main()
{
    int m,n,k;
    scanf("%d%d%d",&n,&m,&k);
    int i;
    for(i=m/n*n+n;i<k;i=i+n){
            printf("%d ",i);
    }
    return 0;
}
//silnia
int main()
{
    int n;
    scanf("%d",&n);
    int i;
    int wynik=1;
    for(i=2;i<=n;i++){
            wynik=wynik*i;
    }
    printf("wasza wpisana liczba %d = %d ",n,wynik);
    return 0;
}
//1^2+2^2+3^2...+n^2
int main()
{
    int n;
    scanf("%d",&n);
    int i;
    int wynik=0;
    for(i=1;i<=n;i++){
            wynik=wynik+i*i;
    }
    printf("ciag liczby %d wynosi %d ",n,wynik);
    return 0;
}
//ile skladnikow mozna zsumowac aby nie przekroczyc k
///1000 = 13
int main()
{
    int n,k;
    scanf("%d",&k);
    int i=1;
    int wynik=0;
    while(wynik<k){
        wynik=wynik+i*i;
        i++;
    }
    printf("%d",i-2);
    return 0;
}
//na n=2 n=3 2 n=4 2 * 4 = 8 n=6 2*4*6=48
//iloczyn wysztkich liczb naturalnych parzystych nie przekraczajacych liczby n
int main()
{
    int n,k;
    scanf("%d",&n);
    int i=1;
    int wynik=1;
    for(i=2;i<=n;i=i+2){
        wynik=wynik*i;
    }
    printf("%d",wynik);
    return 0;
}
// n nie ujemna i wypisuje element ciagu fibonaciego o indeksie n
int main()
{
    int n;
    scanf("%d",&n);
    int i;
    int p=1;
    int d=1;
    int temp;
    int wynik=1;
    for (i=1;i<n;i++) {
    temp=p;
    p=d;
    d=d+temp;
  }
    printf("%d",p);
    return 0;
}
#include <stdio.h>
#include <math.h>
// nwd
/// 8 i 12 to 4
int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    int i;
    int nwd;
    while(n!=m){
        if(n>m){
            n-=m;
        }
        else{
            m-=n;
        }
    }
    printf("nwd %d i %d = %d",n,m,nwd);
    return 0;
}
